{"version":3,"sources":["webpack://jeong mun gyeong/./src/components/bio.js","webpack://jeong mun gyeong/./src/pages/index.js"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","href","facebook","github","location","siteTitle","title","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"qlGAkFA,IAvEY,WAAO,IAAD,IACXA,GAAOC,oBAAe,cAkBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACC,uBAAKC,UAAU,OACd,gBAAC,EAAAC,EAAD,CACCD,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,wBACJC,MAAO,IACPC,OAAQ,IACRC,QAAS,IACTC,IAAI,aARL,uBAUCZ,aAAA,EAAAA,EAAQa,OACR,yBACC,8BAASb,EAAOa,MADjB,KACiCb,aAAA,EAAAA,EAAQc,UAAW,KADpD,IAGC,2BACA,2BACA,2BACA,qBAAGC,KAAI,0BAA0BZ,aAAA,EAAAA,EAAQa,WAAR,KAChC,gBAAC,EAAAX,EAAD,CACCD,UAAU,aACVE,OAAO,cACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,yBACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,IACTC,IAAI,qCARL,uBAWD,qBAAGG,KAAI,wBAAwBZ,aAAA,EAAAA,EAAQc,SAAR,KAC9B,gBAAC,EAAAZ,EAAD,CACCD,UAAU,aACVE,OAAO,cACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,uBACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,IACTC,IAAI,mCARL,2B,+FCAN,UA1DkB,SAAC,GAAwB,IAAD,EAArBd,EAAqB,EAArBA,KAAMoB,EAAe,EAAfA,SACnBC,GAAY,UAAArB,EAAKG,KAAKC,oBAAV,eAAwBkB,QAAxB,QACZC,EAAQvB,EAAKwB,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQN,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQF,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,sBAAIK,MAAO,CAAEC,UAAU,SACpBL,EAAMM,KAAI,SAAAC,GACT,IAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACE3B,UAAU,iBACV6B,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC,wBAAMA,SAAS,YAAYjB,KAG/B,6BAAQQ,EAAKC,YAAYS,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,SAE/CL,SAAS","file":"component---src-pages-index-js-bf43c07f2eb20f47a0bc.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport {graphql, useStaticQuery} from \"gatsby\"\nimport {StaticImage} from \"gatsby-plugin-image\"\nimport * as React from \"react\"\n\nconst Bio = () => {\n\tconst data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            facebook\n            github\n          }\n        }\n      }\n    }\n  `)\n\n\t// Set these values by editing \"siteMetadata\" in gatsby-config.js\n\tconst author = data.site.siteMetadata?.author\n\tconst social = data.site.siteMetadata?.social\n\n\treturn (\n\t\t<div className=\"bio\">\n\t\t\t<StaticImage\n\t\t\t\tclassName=\"bio-avatar\"\n\t\t\t\tlayout=\"fixed\"\n\t\t\t\tformats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n\t\t\t\tsrc=\"../images/profile.gif\"\n\t\t\t\twidth={200}\n\t\t\t\theight={200}\n\t\t\t\tquality={100}\n\t\t\t\talt=\"My picture\"\n\t\t\t/>\n\t\t\t{author?.name && (\n\t\t\t\t<p>\n\t\t\t\t\t<strong>{author.name}</strong> {author?.summary || null}\n\t\t\t\t\t{` `}\n\t\t\t\t\t<br/>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<a href={`https://facebook.com/${social?.facebook || ``}`}>\n\t\t\t\t\t\t<StaticImage\n\t\t\t\t\t\t\tclassName=\"bio-avatar\"\n\t\t\t\t\t\t\tlayout=\"constrained\"\n\t\t\t\t\t\t\tformats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n\t\t\t\t\t\t\tsrc=\"../images/facebook.png\"\n\t\t\t\t\t\t\twidth={64}\n\t\t\t\t\t\t\theight={64}\n\t\t\t\t\t\t\tquality={100}\n\t\t\t\t\t\t\talt=\"You should follow them on facebook\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href={`https://github.com/${social?.github || ``}`}>\n\t\t\t\t\t\t<StaticImage\n\t\t\t\t\t\t\tclassName=\"bio-avatar\"\n\t\t\t\t\t\t\tlayout=\"constrained\"\n\t\t\t\t\t\t\tformats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n\t\t\t\t\t\t\tsrc=\"../images/github.png\"\n\t\t\t\t\t\t\twidth={64}\n\t\t\t\t\t\t\theight={64}\n\t\t\t\t\t\t\tquality={100}\n\t\t\t\t\t\t\talt=\"You should follow them on GitHub\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}